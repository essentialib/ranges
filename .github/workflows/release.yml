name: Release on version change

on:
  push:
    paths:
      - 'package.json'  # package.json 파일이 변경될 때만 실행

jobs:
  check_version_change:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Node.js 버전을 최신 안정화 버전으로 설정

      - name: Install dependencies
        run: npm install

      # 빌드 과정 추가: dist 폴더 생성
      - name: Build the project
        run: npm run build

      - name: Get package.json version
        id: get_version
        run: |
          version=$(jq -r '.version' < package.json)
          echo "::set-output name=version::$version"

      # dist/preserve 폴더 압축
      - name: Zip dist/preserve folder
        run: |
          mkdir -p release_files  # release_files 디렉터리 생성
          zip -r release_files/dist-preserve.zip dist/preserve

      - name: Create GitHub Release
        id: create_release  # Release ID를 얻기 위해 ID를 부여
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Token 설정
        with:
          tag_name: v${{ steps.get_version.outputs.version }}  # 릴리즈 태그
          release_name: v${{ steps.get_version.outputs.version }}  # 릴리즈 이름
          body: |
            Automated release for version ${{ steps.get_version.outputs.version }}.
          draft: false
          prerelease: false

      # dist/all/index.js 파일 업로드
      - name: Upload dist/all/index.js to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Token 설정
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/all/index.js
          asset_name: index.js
          asset_content_type: application/javascript

      # dist/preserve.zip 파일 업로드
      - name: Upload dist/preserve.zip to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Token 설정
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_files/dist-preserve.zip
          asset_name: dist-preserve.zip
          asset_content_type: application/zip
